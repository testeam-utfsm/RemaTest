# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

host = 'http://localhost'

driver = None

def test_create(driver):
  current_time = time.strftime("%Y-%m-%dT%H:%M", time.localtime())   

  driver.get(host)
  driver.set_window_size(1004, 1124)
  driver.find_element(By.LINK_TEXT, "Nueva subasta").click()
  driver.find_element(By.NAME, "product").click()
  driver.find_element(By.NAME, "product").send_keys("Nombre producto nuevo")
  driver.find_element(By.NAME, "base_price").click()
  driver.find_element(By.NAME, "base_price").send_keys("1234")
  driver.find_element(By.ID, "meeting-time").click()

  driver.execute_script("document.getElementById('meeting-time').value = '" + current_time + "'")
  driver.execute_script("document.getElementById('meeting-time').dispatchEvent(new Event('input', { 'bubbles': true }))")
  driver.find_element(By.CSS_SELECTOR, ".col-md-12:nth-child(4) > #meeting-time").click()
  driver.execute_script("document.querySelector('.col-md-12:nth-child(4) > #meeting-time').value = '" + current_time + "'")
  driver.execute_script("document.querySelector('.col-md-12:nth-child(4) > #meeting-time').dispatchEvent(new Event('input', { 'bubbles': true }))")
  driver.find_element(By.ID, "submit").click()
  time.sleep(1)
  assert driver.switch_to.alert.text == "Subasta creada con exito"

def test_delete(driver):
  driver.get(host)
  driver.set_window_size(1004, 1124)

  driver.find_element(By.CSS_SELECTOR, ".mt-3").click()
  time.sleep(1)
  driver.find_element(By.CSS_SELECTOR, ".modal-footer > .btn-danger").click()
  time.sleep(1)

  assert driver.switch_to.alert.text == "OK"

def test_pujar(driver):
  driver.get(host)
  driver.set_window_size(1004, 1124)
  driver.find_element(By.LINK_TEXT, "Pujar").click()
  time.sleep(2)
  driver.execute_script("document.getElementsByName('amount')[0].value = '1235'")
  driver.execute_script("document.getElementsByName('amount')[0].dispatchEvent(new Event('input', { 'bubbles': true }))")

  time.sleep(1)
  driver.execute_script("document.getElementById('submit').click()")
  time.sleep(1)
  
  assert driver.find_element(By.CSS_SELECTOR, "div > div:nth-child(3) > div.card-body > h5:nth-child(2)").text == "Precio actual: $1235"
  
def test_searchInexistent(driver):
  driver.get(host)
  driver.set_window_size(1004, 1124)
  driver.execute_script("document.querySelector('.form-control').value = 'cualquier cosa'")
  driver.execute_script("document.querySelector('.form-control').dispatchEvent(new Event('input', { 'bubbles': true }))")
  time.sleep(1)

  assert len(driver.find_elements(By.CSS_SELECTOR, ".card-header > span")) == 0   

def test_searchNombre(driver):
  driver.get(host)
  driver.set_window_size(1004, 1124)
  driver.find_element(By.CSS_SELECTOR, ".form-control").click()
  driver.execute_script("document.querySelector('.form-control').value = 'nombre'")
  driver.execute_script("document.querySelector('.form-control').dispatchEvent(new Event('input', { 'bubbles': true }))")
  time.sleep(1)

  assert driver.find_element(By.CSS_SELECTOR, ".card-header > span").text == "Producto: Nombre producto nuevo"

def main():
    options = webdriver.EdgeOptions()
    options.add_argument('--lang=en-us')

    driver = webdriver.Edge(options=options)
    test_create(driver)
    driver.quit()

    driver = webdriver.Edge(options=options)
    test_delete(driver)
    driver.quit()

    driver = webdriver.Edge(options=options)
    test_create(driver)
    driver.quit()

    driver = webdriver.Edge(options=options)
    test_searchNombre(driver)
    driver.quit()

    driver = webdriver.Edge(options=options)
    test_searchInexistent(driver)
    driver.quit()

    driver = webdriver.Edge(options=options)
    test_pujar(driver)
    driver.quit()

main()